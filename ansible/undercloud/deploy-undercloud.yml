---
#
# Playbook deploying and setting up your undercloud for overcloud deployment in scale lab
# environment or the bagl environment.
#
# Tested against OSP 8/9/10/11/12 and single-nic-vlans config setup with private external network
#

# Tasks as root
- hosts: undercloud
  gather_facts: true
  vars_files:
    - vars/main.yml
  remote_user: root
  tasks:
    - name: Disable epel
      shell: rpm -e epel-release
      ignore_errors: true

    - name: Disable beaker repos
      shell: rm -rf /etc/yum.repos.d/beaker-*

    - name: Add custom repos
      template:
        src: "templates/undercloud-deploy.repo.j2"
        dest: /etc/yum.repos.d/undercloud-deploy.repo
      when: deploy_additional_repos

    - name: Get rhos-release
      get_url:
        url: "{{rhos_release_rpm}}"
        dest: /root/rhos-release.rpm
        validate_certs: false

    - name: Install rhos-release
      yum: name=/root/rhos-release.rpm

    - name: Setup OSP version to install
      command: "rhos-release {{rhos_release}} -p {{build}} -r {{rhel_version}}"

    - name: Install terminal multiplexers
      yum: name={{item}}
      with_items:
        - tmux
        - screen

    - name: Update Packages
      yum: name=* state=latest

    - name: Reboot machine
      shell: "nohup sh -c '( sleep 5 ; shutdown -r now )' &"
      async: 0
      poll: 0
      ignore_errors: true

    # 8 minute timeout
    - name: Wait for Machine Ready
      local_action:
        module: wait_for
        host: "{{inventory_hostname}}"
        port: 22
        delay: 15
        timeout: 480

    - name: Add stack user
      user: name=stack

    # Not entirely sure why the password wouldn't take with the initial command
    - name: Stack user password
      user:
        name: stack
        update_password: always
        password: "{{stack_password}}"

    - name: Sudo for stack user
      shell: echo "stack ALL=(root) NOPASSWD:ALL" | tee -a /etc/sudoers.d/stack; chmod 0440 /etc/sudoers.d/stack

    - name: Setup authorized key upload
      authorized_key:
        user: stack
        key: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"

    - name: Setup tripleo directories
      file:
        path: "{{item}}"
        state: directory
        owner: stack
        group: stack
      with_items:
        - /home/stack/images
        - /home/stack/templates
        - /home/stack/templates/firstboot

    - name: Install tripleo
      yum:
        name: python-tripleoclient

    - name: Install ceph-ansible
      yum:
        name: ceph-ansible
      when: version >= 12

    - name: Set hostname
      shell: hostnamectl set-hostname {{ansible_fqdn}}

    - name: Set transient hostname
      shell: hostnamectl set-hostname --transient {{ansible_fqdn}}

    - name: Fix hosts file
      lineinfile:
        dest: /etc/hosts
        line: "127.0.0.1   {{ansible_fqdn}} {{ansible_hostname}} localhost localhost.localdomain localhost4 localhost4.localdomain4"
        regexp: "127.0.0.1"

    - name: Copy undercloud.conf
      template:
        src: "templates/undercloud.{{version}}.conf.j2"
        dest: /home/stack/undercloud.conf
        owner: stack
        group: stack

    - name: Deploy Private external vlan interface
      template:
        src: templates/ifcfg-vlan.j2
        dest: "/etc/sysconfig/network-scripts/ifcfg-{{external_vlan_device}}"
        owner: root
        group: root
      when: deploy_external_private_vlan

    - name: Turn on Private external vlan interface
      shell: ifup {{external_vlan_device}}
      when: deploy_external_private_vlan

- hosts: undercloud
  gather_facts: false
  vars_files:
    - vars/main.yml
  remote_user: stack
  tasks:
    - name: Install undercloud
      shell: openstack undercloud install

    - name: Install ipa and overcloud images
      become: true
      yum: name={{item}}
      with_items:
        - rhosp-director-images
        - rhosp-director-images-ipa

    - name: Untar ipa and overcloud images
      command: "tar -xvf {{item}}  -C /home/stack/images"
      with_items:
        - "/usr/share/rhosp-director-images/overcloud-full-latest-{{version}}.0.tar"
        - "/usr/share/rhosp-director-images/ironic-python-agent-latest-{{version}}.0.tar"

    - name: Upload images
      shell: . /home/stack/stackrc; openstack overcloud image upload --image-path /home/stack/images/

    - name: Get neutron subnet uuid
      shell: . /home/stack/stackrc; neutron subnet-list|grep start| awk '{print $2}'
      register: neutron_subnet_uuid

    - debug: msg="neutron_subnet_uuid- {{neutron_subnet_uuid}}"

    - name: Setup DNS on Undercloud Neutron subnet
      shell: ". /home/stack/stackrc; neutron subnet-update {{neutron_subnet_uuid.stdout}} --dns-nameserver {{dns_server}}"

    # Setup Container Registry - Pike (OSP12)
    - name: Pike(12)/Queens(13) Append additional insecure registry to /etc/sysconfig/docker
      become: true
      lineinfile:
        path: /etc/sysconfig/docker
        state: present
        regexp: '^INSECURE_REGISTRY='
        line: 'INSECURE_REGISTRY="--insecure-registry 192.168.24.1:8787 --insecure-registry 192.168.24.3:8787 --insecure-registry {{additional_insecure_registry}}"'
      when: version >= 12

    - name: Pike(12)/Queens(13) Restart Docker registry
      become: true
      service:
        name: docker
        state: restarted
      when: version >= 12

    - name: Pike(12)/Queens(13) Create template to pull images to local registry
      shell: ". /home/stack/stackrc; openstack overcloud container image prepare --namespace {{container_namespace}} --tag {{containers_tag}} --pull-source {{additional_insecure_registry}} --prefix openstack --push-destination 192.168.24.1:8787 --images-file overcloud_containers.yaml"
      when: version >= 12 and local_docker_registry

    # (akrzos) I could not get this command to respond without:
    # "Error while fetching server API version: ('Connection aborted.', error(13, 'Permission denied'))"
    # thus I added retry to this command and yet it still requires rerunning this specific command
    - name: Pike(12)/Queens(13) Pull images using the container_images.yaml
      shell: ". /home/stack/stackrc; openstack overcloud container image upload --config-file overcloud_containers.yaml"
      register: pull_images
      until: pull_images.rc == 0
      retries: 2
      delay: 10
      ignore_errors: true
      when: version >= 12 and local_docker_registry

    - name: Pike(12)/Queens(13) Create template for using images from local registry
      shell: ". /home/stack/stackrc; openstack overcloud container image prepare --tag {{containers_tag}} --namespace 192.168.24.1:8787/{{container_namespace}} --prefix openstack --suffix docker --env-file ~/docker_registry.yaml -r ~/templates/roles_data.yaml"
      when: version >= 12 and local_docker_registry

    - name: Pike(12)/Queens(13) Create template for using images from remote registry
      shell:
        cmd: openstack overcloud container image prepare --namespace={{additional_insecure_registry}}/{{container_namespace}} --env-file=/home/stack/docker_registry.yaml --prefix=openstack --tag={{containers_tag}}
      when: version >= 12 and not local_docker_registry
    # End Setup Container Registry

    - name: Get instackenv.json
      get_url:
        url: "{{instackenv_json}}"
        dest: /home/stack/instackenv.json
        owner: stack
        group: stack

    - name: Newton(10)/Ocata(11)/Pike(12) check if credentials in instackenv.json are correct
      shell: openstack baremetal instackenv validate  -f  /home/stack/instackenv.json
      register: node_status
      failed_when: "'SUCCESS' not in node_status.stdout"
      when: version < 13

    - name: Queens(13) Import instackenv.json
      shell: |
        . /home/stack/stackrc
        openstack overcloud node import /home/stack/instackenv.json
      when: version >= 13

    - name: Newton(10)/Ocata(11)/Pike(12) Import instackenv.json
      shell: |
        . /home/stack/stackrc
        openstack baremetal import --json /home/stack/instackenv.json
      when: version < 13

    - name: Queens(13) Configure boot
      shell: |
        . /home/stack/stackrc
        openstack overcloud node configure --all-manageable
      when: version >= 13

    - name: Newton(10)/Ocata(11)/Pike(12) Configure boot
      shell: |
        . /home/stack/stackrc
        openstack baremetal configure boot
      when: version < 13

    - name: Queens(13) Set Nodes to provide
      shell: |
        . /home/stack/stackrc
        openstack overcloud node provide --all-manageable
      when:
        - version >= 13
        - not introspection
        - not introspect_with_retry

    # TODO: Queens(13) Determine if we need to wait for cleaning to finish after pushing nodes to provide

    - name: Template introspection script
      template:
        src: "introspect.sh.j2"
        dest: "/home/stack/introspect.sh"

    - name: Run introspection script
      shell: "bash /home/stack/introspect.sh"

    - name: Remove boot_option:local from ironic nodes
      shell: . /home/stack/stackrc; ironic node-list | grep None | awk '{print $2}' | xargs -I % ironic node-update % replace properties/capabilities='cpu_vt:true,cpu_hugepages:true,cpu_txt:true,cpu_aes:true,cpu_hugepages_1g:true'
      when: scale_lab_broke

    - name: Generate node-data
      shell: . /home/stack/stackrc; mkdir ~/node-data; for i in `ironic node-list | grep avail | awk '{print $2}'`; do openstack baremetal introspection data save $i > node-data/$i; done

    - name: Remove boot_option:local from flavors
      shell: ". /home/stack/stackrc; openstack flavor unset --property 'capabilities:boot_option' {{item}}"
      with_items:
        - baremetal
        - compute
        - control
        - ceph-storage
        - block-storage
        - swift-storage
      when: scale_lab_broke

    # Pin Nodes:
    - name: Copy pin.py to Undercloud
      copy:
        src: files/pin.py
        dest: /home/stack/pin.py
        owner: stack
        group: stack
        mode: 0744
      when: pin_nodes

    - name: Copy Node pinning definition to pin.yaml
      copy:
        content: "{{ pin_nodes_definition | to_yaml }}"
        dest: /home/stack/pin.yaml
      when: pin_nodes

    - name: Run pin.py
      shell: . /home/stack/stackrc; /home/stack/pin.py /home/stack/pin.yaml
      when: pin_nodes
    # End Pin Nodes

    - name: Copy original network configuration files
      shell: cp -r /usr/share/openstack-tripleo-heat-templates/network/config/single-nic-vlans ~/templates/nic-configs

    - name: Copy roles_data.yaml into ~/templates
      shell: cp /usr/share/openstack-tripleo-heat-templates/roles_data.yaml ~/templates

    - name: Copy over static configuration files
      copy:
        src: "{{item.src}}"
        dest: "{{item.dest}}"
        owner: stack
        group: stack
      with_items:
        - src: files/compute.yaml
          dest: /home/stack/templates/nic-configs/compute.yaml
        - src: files/controller.yaml
          dest: /home/stack/templates/nic-configs/controller.yaml
        - src: files/ceph-storage.yaml
          dest: /home/stack/templates/nic-configs/ceph-storage.yaml
        - src: files/cinder-storage.yaml
          dest: /home/stack/templates/nic-configs/cinder-storage.yaml
        - src: files/swift-storage.yaml
          dest: /home/stack/templates/nic-configs/swift-storage.yaml
        - src: files/deploy.sh
          dest: /home/stack/deploy.sh
        - src: files/tunings.yaml
          dest: /home/stack/tunings.yaml
        - src: files/ceph-pool-tune.yaml
          dest: /home/stack/templates/ceph-pool-tune.yaml
        - src: files/scheduler-hints.yaml
          dest: /home/stack/templates/scheduler-hints.yaml
        - src: files/wipe-disks.yaml
          dest: /home/stack/templates/firstboot/wipe-disks.yaml
        - src: files/wipe-disk.sh
          dest: /home/stack/templates/firstboot/wipe-disk.sh

    - name: Template out Heat Templates
      template:
        src: "{{item.src}}"
        dest: "{{item.dest}}"
        owner: stack
        group: stack
      with_items:
        - src: "templates/network-environment.yaml.j2"
          dest: "/home/stack/templates/network-environment.yaml"
        - src: "templates/storage-environment.yaml.j2"
          dest: "/home/stack/templates/storage-environment.yaml"
        - src: "templates/deploy.yaml.j2"
          dest: "/home/stack/templates/deploy.yaml"

    # (WARNING) This is more than likely a hack to allow external network addresses on compute nodes
    - name: Fix /usr/share/openstack-tripleo-heat-templates/environments/network-isolation.yaml
      become: true
      lineinfile:
        dest: /usr/share/openstack-tripleo-heat-templates/environments/network-isolation.yaml
        line: "  OS::TripleO::Compute::Ports::ExternalPort: ../network/ports/external.yaml"
        regexp: "  OS::TripleO::Compute::Ports::ExternalPort: ../network/ports/noop.yaml"
        backup: true
      when: allow_external_on_compute

    - name: Place version metadata json file in /home/stack
      become: true
      template:
        src: "templates/version.json.j2"
        dest: "{{version_directory}}/version.json"
        owner: stack
        group: stack

    # Configure subjectAltNames (Incomplete as of right now)
    # - name: Configure alt_names in openssl.cnf
    #   become: true
    #   ini_file:
    #     dest: /etc/pki/tls/openssl.cnf
    #     section: "{{item.section}}"
    #     option: "{{item.option}}"
    #     value: "{{item.value}}"
    #   with_items:
    #     - section: " v3_req "
    #       option: "subjectAltName"
    #       value: "@alt_names"
    #     - section: "alt_names"
    #       option: "IP.1"
    #       value: "{{external_network_vip}}"
    #     - section: "alt_names"
    #       option: "DNS.1"
    #       value: "{{external_network_vip}}"
    #   when: overcloud_ssl_endpoints

    - name: Create a SSL Private Key
      shell: "openssl genrsa -out /home/stack/overcloud-privkey.pem 2048"
      when: overcloud_ssl_endpoints

    - name: Create Self-Signed CA Certificate
      shell: "openssl req -new -x509 -key /home/stack/overcloud-privkey.pem -out /home/stack/overcloud-cacert.pem -days 365 -subj '/C=US/ST=NC/L=Raleigh/O=Red Hat/OU=Performance/CN={{external_network_vip}}'"
      # Use when subjectaltnames configured:
      #shell: "openssl req -new -x509 -key /home/stack/overcloud-privkey.pem -out /home/stack/overcloud-cacert.pem -days 365 -subj '/C=US/ST=NC/L=Raleigh/O=Red Hat/OU=Performance/CN={{external_network_vip}}' -extensions v3_req"
      when: overcloud_ssl_endpoints

    - name: Copy Self-Signed CA Certificate to trusted store
      shell: "cp /home/stack/overcloud-cacert.pem /etc/pki/ca-trust/source/anchors/"
      become: true
      when: overcloud_ssl_endpoints

    - name: Update the CA store
      shell: "update-ca-trust extract"
      become: true
      when: overcloud_ssl_endpoints

    - name: Obtain the Private Key
      shell: "cat /home/stack/overcloud-privkey.pem"
      register: private_key
      when: overcloud_ssl_endpoints

    - name: Obtain the CA certificate
      shell: "cat /home/stack/overcloud-cacert.pem"
      register: cacert
      when: overcloud_ssl_endpoints

    - name: Set ssl_private_key
      set_fact:
        ssl_private_key: "{{private_key.stdout | indent(4) | string}}"
      when: overcloud_ssl_endpoints

    - name: Set ssl_certificate
      set_fact:
        ssl_certificate: "{{cacert.stdout | indent(4) | string}}"
      when: overcloud_ssl_endpoints

    - name: Deploy SSL/TLS yamls
      template:
        src: "{{item.src}}"
        dest: "{{item.dest}}"
      with_items:
        - src: "templates/enable-tls.yaml.j2"
          dest: "/home/stack/templates/enable-tls.yaml"
        - src: "templates/inject-trust-anchor.yaml.j2"
          dest: "/home/stack/templates/inject-trust-anchor.yaml"
        - src: "templates/cloudname.yaml.j2"
          dest: "/home/stack/templates/cloudname.yaml"
      when: overcloud_ssl_endpoints
